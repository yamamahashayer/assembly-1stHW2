#include <iostream>
using namespace std;
#include <stdio.h>
//#include <bitset>

int func(float num) 
{

    int  hexValue;
    int biasedExponent;
    char biasedExponentB[9] = {};
    int mantissa;
    char  mantissaB[24] = {};
   


    _asm {                                                                  
        // 0-22 mantissa
        // 23-30 biasedExponent
        // 31 sign


        mov eax, num
        mov hexValue, eax

    }

 

    _asm {

        mov eax, num;
        and eax, 0x007FFFFF        // 0 000 0000 0111 1111 1111 1111 1111 1111 
            mov mantissa, eax

     }


    _asm {
        mov ebx, mantissa
        lea edi, mantissaB
        mov ecx, 0
        L1:
        cmp ecx, 22
            JA lf
            shr ebx, 1
            jc C1
            C0 :
        mov byte ptr[edi], '0'
            inc edi
            inc ecx
            jmp  L1
            C1 :
        mov byte ptr[edi], '1'
            inc edi
            inc ecx
            jmp  L1
            lf :
       
    }



    _asm {

        mov eax, num;
        and eax, 0x7F800000        // 0 111 1111 1000 0000 0000 0000 0000 0000 
            sub eax, 0x7F            // 127 B
            shr eax, 23
            add eax, 1
            mov biasedExponent, eax

    }

    _asm {
        mov ebx, biasedExponent
        lea edi, biasedExponentB
        mov ecx, 0
        L11:
        cmp ecx, 7
            JA lff
            shr ebx, 1
            jc C11
            C00 :
        mov byte ptr[edi], '0'
            inc edi
            inc ecx
            jmp  L11
            C11 :
        mov byte ptr[edi], '1'
            inc edi
            inc ecx
            jmp  L11
            lff :

    


    }

    cout << "The value in HEX is ";
    printf("%x", hexValue);
    cout <<   " H" << endl;



    cout << "The mantissa is ";
    char* reversedPtr1 = mantissaB + 23; 
    while (reversedPtr1 >= mantissaB) {
        cout << *reversedPtr1;
        reversedPtr1--;
    }
   cout << endl;





   cout << "The biased Exponent is ";
   char* reversedPtr2 = biasedExponentB + 8;
   while (reversedPtr2 >= biasedExponentB) {
       cout << *reversedPtr2;
       reversedPtr2--;
   }
    cout << endl;



    return 0;
}

int main()
{

    float num;
    cout << "Enter num: " << endl;
    cin >> num;


    func(num);
    return 0;
}



